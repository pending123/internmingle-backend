generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId              Int         @id @default(autoincrement())
  clerkId             String
  firstName           String?
  lastName            String?
  birthday            DateTime?
  bio                 String?
  university          String?
  company             String?
  workPosition        String?
  workZipcode         String?
  internshipStartDate DateTime?
  internshipEndDate   DateTime?
  schoolMajor         String?
  isLookingForHousing Boolean?
  sleepSchedule       String?
  numOfRoomates       Int?
  noiseLevel          String?
  budgetRange         Int?
  instagram           String?
  linkedin            String?
  github              String?
  facebook            String?
  workCity            String?
  gender              String?
  profileCompleted    Boolean?    @default(false)
  events              Event[]
  forums              Forum[]
  userHobbies         UserHobby[]
  userTraits          UserTrait[]

  @@index([clerkId])
  @@index([workCity])
  @@index([isLookingForHousing])
}

model Forum {
  forumId     Int      @id @default(autoincrement())
  category    String
  title       String
  textContent String
  imgUrl      String?
  createdAt   DateTime @default(now())
  upvotes     Int
  userId      Int
  user        User     @relation(fields: [userId], references: [userId])
}

model Event {
  eventId     Int      @id @default(autoincrement())
  category    String
  location    String
  dateTime    DateTime
  imgUrl      String?
  userId      Int
  description String
  user        User     @relation(fields: [userId], references: [userId])
}

model Trait {
  traitId    Int         @id @default(autoincrement())
  trait      String
  userTraits UserTrait[]
}

model Hobby {
  hobbyId     Int         @id @default(autoincrement())
  hobby       String
  userHobbies UserHobby[]
}

model UserTrait {
  userId  Int
  traitId Int
  trait   Trait @relation(fields: [traitId], references: [traitId], onDelete: Cascade)
  user    User  @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@id([userId, traitId])
}

model UserHobby {
  userId  Int
  hobbyId Int
  hobby   Hobby @relation(fields: [hobbyId], references: [hobbyId], onDelete: Cascade)
  user    User  @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@id([userId, hobbyId])
}
